<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on The Portal of Knowledge</title>
    <link>https://alamot.github.io/tags/tool/</link>
    <description>Recent content in Tool on The Portal of Knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://alamot.github.io/tags/tool/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ask and you shall receive</title>
      <link>https://alamot.github.io/oracle/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/oracle/</guid>
      <description>#copybutton { display: inline-block; margin: 10px; } #input { display: block; } #result { background-color: yellow; border: 1px solid black; display: none; padding: 10px; word-break: break-all; white-space: normal; }    Copy result to clipboard 
    $(function () { var functions = {}; functions[&#34;Base64 encoding&#34;] = function (input) { return btoa(input); } functions[&#34;Base64 decoding&#34;] = function (input) { return atob(input); } functions[&#34;Binary encoding&#34;] = function (input) { output = &#34;</description>
    </item>
    
    <item>
      <title>Known-plaintext attack tool for XOR-encrypted data</title>
      <link>https://alamot.github.io/xor_kpa/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/xor_kpa/</guid>
      <description>Let&#39;s say we XOR-encrypt a text file using this &#34;secure&#34; password/key: @v3RyS3cREtK3y!
We should not forget that:
plaintext ⊕ key = encrypted_text encrypted_text ⊕ plaintext = key encrypted_text ⊕ key = plaintext  If the key is smaller than the plaintext, the key is repeated. This fact makes this encryption scheme extremely weak.
In practice, the above equations mean that if we know a part of the initial plaintext, then we can retrieve part of the key relatively easily.</description>
    </item>
    
    <item>
      <title>MSSQL shell with file upload capability</title>
      <link>https://alamot.github.io/mssql_shell/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/mssql_shell/</guid>
      <description>Sometimes we can get access to a Microsoft SQL server in which the execution of the xp_cmdshell stored procedure is allowed but other kind of traffic (TCP, UDP, ICMP et.c.) is blocked by some kind of firewall. This can make the acquisition of a shell more difficult. In such cases, it would be useful to have a kind of shell via multiple xp_cmdshell commands. One problem with that approach is that every xp_cmdshell command will be executed in a new context.</description>
    </item>
    
    <item>
      <title>WinRM shell (a.k.a. PowerShell Remoting) with file upload capability</title>
      <link>https://alamot.github.io/winrm_shell/</link>
      <pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/winrm_shell/</guid>
      <description>According to Microsoft, PowerShell Remoting is the recommended way to manage Windows systems. PowerShell Remoting uses Windows Remote Management (WinRM), which is the Microsoft implementation of the Web Services for Management (WS-Management) protocol, to allow users to run PowerShell commands on remote computers. But can we make use of it (i.e. connect) from a Linux machine?
Σύμφωνα με την Microsoft, το PowerShell Remoting είναι ο ενδεδειγμένος τρόπος για την απομακρυσμένη διαχείριση Windows συστημάτων.</description>
    </item>
    
  </channel>
</rss>