<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on The Portal of Knowledge</title>
    <link>https://alamot.github.io/tags/linux/</link>
    <description>Recent content in Linux on The Portal of Knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://alamot.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fulcrum write-up</title>
      <link>https://alamot.github.io/fulcrum_writeup/</link>
      <pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/fulcrum_writeup/</guid>
      <description>Enumeration Port scanning Let&amp;rsquo;s scan the full range of TCP ports using my tool htbscan.py (you can find it here: https://github.com/Alamot/code-snippets/blob/master/enum/htbscan.py).
$ sudo htbscan.py 10.10.10.62 200 Running command: sudo masscan -e tun0 -p0-65535 --max-rate 200 --interactive 10.10.10.62 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2018-06-08 20:43:37 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [65536 ports/host] Discovered open port 9999/tcp on 10.10.10.62 Discovered open port 88/tcp on 10.</description>
    </item>
    
    <item>
      <title>Inception write-up</title>
      <link>https://alamot.github.io/inception_writeup/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/inception_writeup/</guid>
      <description>Enumeration Port scanning $ sudo masscan -e tun0 -p0-65535 --max-rate 500 10.10.10.67 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2018-04-14 09:24:04 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [65536 ports/host] Discovered open port 80/tcp on 10.10.10.67 Discovered open port 3128/tcp on 10.10.10.67  We found TCP ports 80 and 3128 open. Let&amp;rsquo;s explore them using nmap: $ sudo nmap -A -p80,3128 10.</description>
    </item>
    
    <item>
      <title>Node write-up</title>
      <link>https://alamot.github.io/node_writeup/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/node_writeup/</guid>
      <description>Enumeration Port scanning We scan the full range of TCP ports using masscan: $ sudo masscan -e tun0 -p0-65535 --max-rate 500 10.10.10.58 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2018-02-28 16:09:43 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [65536 ports/host] Discovered open port 3000/tcp on 10.10.10.58 Discovered open port 22/tcp on 10.10.10.58 
We found TCP ports 22 and 3000 open. Let&amp;rsquo;s explore them using nmap: $ sudo nmap -A -p22,3000 10.</description>
    </item>
    
    <item>
      <title>Nineveh write-up</title>
      <link>https://alamot.github.io/nineveh_writeup/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/nineveh_writeup/</guid>
      <description>Enumeration Port scanning We scan the full range of TCP ports using masscan: $ sudo masscan -e tun0 -p0-65535 --max-rate 500 10.10.10.43 Password: Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2017-12-17 09:45:27 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [65536 ports/host] Discovered open port 80/tcp on 10.10.10.43 Discovered open port 443/tcp on 10.10.10.43 
We found TCP ports 80 and 443 open.</description>
    </item>
    
    <item>
      <title>Git &amp; Mercurial: How to commit-push fast and easily</title>
      <link>https://alamot.github.io/fast_commit_push/</link>
      <pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/fast_commit_push/</guid>
      <description>Git and Mercurial are distributed revision-control tools for software development and other version control tasks. We present two bash scripts, one for each tool, to help us commit and push our changes fast and easily.
Το Git και το Mercurial είναι εργαλεία κατανεμημένου ελέγχου-αναθεώρησης για ανάπτυξη λογισμικού και άλλες εργασίες ελέγχου έκδοσης. Παρουσιάζουμε δύο σενάρια bash, ένα για κάθε εργαλείο, που μας βοηθάνε να κάνουμε commit και push τις αλλαγές μας γρήγορα και εύκολα.</description>
    </item>
    
    <item>
      <title>How to get info for the wireless interface using nl80211 in C</title>
      <link>https://alamot.github.io/nl80211/</link>
      <pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/nl80211/</guid>
      <description>nl80211 The nl80211 is the 802.11 netlink-based userspace interface for the new cfg80211 configuration system for wireless hardware. Together they are intended to replace the old Wireless-Extensions. Current users of nl80211 include:
H nl80211 είναι η διεπαφή χρήστη (βασισμένη στο netlink 802.11) για το νέο σύστημα διαρρύθμισης cfg80211 του ασύρματου υλικού. Μαζί προορίζονται να αντικαταστήσουν τα παλιά Wireless-Extensions. Το nl80211 χρησιμοποιείται μεταξύ αλλων από τα:
 iw crda hostapd wpa_supplicant (-Dnl80211)  Includes First of all, let&#39;s add the necessary includes:</description>
    </item>
    
    <item>
      <title>Creation of a transparent shutdown GUI using Gtk and Cairo in Python</title>
      <link>https://alamot.github.io/shutdown_manager_transparent/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/shutdown_manager_transparent/</guid>
      <description>Many window managers in Linux are lacking a graphical «shutdown» interface. In our previous article, we showed how we can implement one, quite easily, using GTK and Python. Now, we will show how to make it transparent using Cairo.
Πολλοί διαχειριστές παραθύρων στο Linux δε διαθέτουν μια γραφική διεπαφή «κλεισίματος». Σε προηγούμενο άρθρο μας, δείξαμε πώς μπορείτε να υλοποιήσετε μία, αρκετά εύκολα, χρησιμοποιώντας GTK και Python. Τώρα, θα δείξουμε πως μπορείτε να την κάνετε διάφανη χρησιμοποιώντας Cairo.</description>
    </item>
    
    <item>
      <title>Creation of a shutdown GUI using Gtk in Python</title>
      <link>https://alamot.github.io/shutdown_manager_plain/</link>
      <pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://alamot.github.io/shutdown_manager_plain/</guid>
      <description>Many window managers in Linux are lacking a graphical «shutdown» interface. Here, we show how we can implement one, quite easily, using gtk and python. In a follow-up article, we show how we can create a transparent GUI using Cairo.
Πολλοί διαχειριστές παραθύρων στο Linux δε διαθέτουν μια γραφική διεπαφή «κλεισίματος». Εδώ, θα δείξουμε πώς μπορείτε να υλοποιήσετε μία, αρκετά εύκολα, χρησιμοποιώντας gtk και python. Σε επόμενο άρθρο μας, δείχνουμε πώς μπορείτε να δημιουργήσετε μια διάφανη διεπαφή χρήστη χρησιμοποιώντας Cairo.</description>
    </item>
    
  </channel>
</rss>